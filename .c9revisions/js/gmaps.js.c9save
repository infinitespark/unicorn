{"ts":1380120880049,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Google Maps API methods\r\nvar ns_gmaps = {};\r\n\r\n(function () {\r\n    \"use strict\";\r\n    \r\nns_gmaps.settings = xCore.modules.gmaps.settings; \r\nns_gmaps.map = null;\r\n\r\n//Let's just define all overlay types here!\r\nxCore.globalobjects.overlays = {};\r\nxCore.globalobjects.overlays.gme = {};\r\nxCore.globalobjects.overlays.placesearch = [];\r\nxCore.globalobjects.overlays.quicksearch = {};\r\n\r\n\r\nns_gmaps.mapInitiallize = function()\r\n{\r\n    google.maps.visualRefresh = false;\r\n    \r\n    var styles = ns_gmaps.settings.styledMap;    \r\n    var mapOptions = \r\n    {\r\n        center: new google.maps.LatLng(ns_gmaps.settings.centerlng,ns_gmaps.settings.centerlat),\r\n        zoom: ns_gmaps.settings.zoom,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP,        \r\n        panControl: true,\r\n        overviewMapControl: true,\r\n        mapTypeControlOptions: \r\n        {\r\n            mapTypeIds: ['Styled', google.maps.MapTypeId.SATELLITE]\r\n        },\r\n        panControlOptions: \r\n        {\r\n            position: google.maps.ControlPosition.RIGHT_TOP\r\n        },    \r\n        zoomControl: true,\r\n        zoomControlOptions: \r\n        {\r\n            style: google.maps.ZoomControlStyle.LARGE,\r\n            position: google.maps.ControlPosition.RIGHT_TOP\r\n        }\r\n    };\r\n    \r\n    ns_gmaps.map = new google.maps.Map(document.getElementById(\"map-canvas\"),mapOptions);\r\n    \r\n    var mapType = new google.maps.StyledMapType(styles, { name:\"Mapa\" });    \r\n    \r\n    ns_gmaps.map.mapTypes.set('Styled', mapType);\r\n    ns_gmaps.map.setMapTypeId('Styled');    \r\n};\r\n\r\nns_gmaps.addMapsEngineMap = function (map)\r\n{\r\n    var layers = map.contents;\r\n    var mapsEngineLayer;\r\n    \r\n    if(layers && layers.length > 0)\r\n    {\r\n        for (var i = 0; i < layers.length; i++){\r\n          //ns_gmaps.addMapsEngineLayer(layers[i]);\r\n            mapsEngineLayer = new google.maps.visualization.MapsEngineLayer({\r\n            mapId: map.id,   \r\n            layerKey: layers[i].key,\r\n            map: ns_gmaps.map,            \r\n            accessToken: session.oauthtoken\r\n          });\r\n        }\r\n                \r\n        xCore.globalobjects.overlays.gme[mapsEngineLayer.mapId] = mapsEngineLayer;\r\n    }  \r\n};\r\n\r\nns_gmaps.addMapsEngineLayer = function (layer)\r\n{\r\n    showLoader();\r\n    var mapsEngineLayer;\r\n    if(layer)\r\n    {  \r\n        if(layer.type === \"layer\"){\r\n            if(!xCore.globalobjects.overlays.gme[layer.id]){\r\n                mapsEngineLayer = new google.maps.visualization.MapsEngineLayer({\r\n                layerId: layer.id,\r\n                map: ns_gmaps.map,            \r\n                accessToken: session.oauthtoken,\r\n                suppressInfoWindows: true\r\n            });\r\n            \r\n            //Listener : force goto viewport\r\n            google.maps.event.addListener(mapsEngineLayer, 'bounds_changed', function() {\r\n                if(xCore.settings.user.layerAutoGoto){\r\n                    ns_gmaps.map.fitBounds(mapsEngineLayer.get('bounds'));\r\n                }\r\n            });\r\n            \r\n            //Listener : Return layer status\r\n            google.maps.event.addListener(mapsEngineLayer, 'status_changed', function() {\r\n                if(mapsEngineLayer.status !== \"OK\"){\r\n                    ns_interface.showAlert(\"MapsEngineLayer Class\" , \"The layer <i>'\" + layer.name + \"'</i> could not be loaded sucessufuly and it will be disabled!\", false );  \r\n                    ns_interface.disableLayer(layer.id);\r\n                } else {\r\n                    ns_interface.setLayerOnOff(layer.id, true);\r\n                }\r\n                hideLoader();\r\n            });\r\n            \r\n            //Infowindow\r\n            var aInfowindow = new google.maps.InfoWindow({});\r\n            \r\n            //Listener: Click on layer\r\n            google.maps.event.addListener(mapsEngineLayer, 'click', function(event){\r\n                if(event){\r\n                    aInfowindow.setPosition(event.latLng);\r\n                    aInfowindow.setContent(ns_gmaps.newInfowindowBody(event.infoWindowHtml));\r\n                    aInfowindow.open(ns_gmaps.map);\r\n                }   \r\n            });\r\n            \r\n            google.maps.event.addListener(aInfowindow, 'domready', function(){\r\n               \r\n            }); \r\n            \r\n            xCore.globalobjects.overlays.gme[mapsEngineLayer.layerId] = mapsEngineLayer;\r\n            }\r\n        } \r\n        else {\r\n            if(layer.type === \"folder\" && layer.contents){\r\n                for (var i = 0 ; i < layer.contents.length ; i++){\r\n                   ns_gmaps.addMapsEngineLayer(layer.contents[i], layer.id); \r\n                }\r\n            }\r\n            else {\r\n                ns_interface.showAlert(\"??\",\"The layer or folder didn't seem to have any content!\",false);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nns_gmaps.newInfowindowBody = function(someHtml){\r\n    /* GSS CONNECTION\r\n    var fullBody;\r\n    var aTag = \"urn____\";\t\r\n\tvar aux1 = someHtml.substring(someHtml.indexOf(aTag) + aTag.length);\r\n\tvar aux2 = aux1.substring(aux1.indexOf(\"\\\"\") + \"\\\"\".length);\r\n\tvar aURN = aux2.substr(0, aux2.indexOf(\"\\\"\"));\r\n\r\n    someHtml += \"<div id='editorToolbar'><a alt='Ver mais...' href='#' onclick=\\\"ns_gss.getObjectInfo('\" + aURN + \"', '\"+ aTag + \"');\\\"><button class='btn btn-primary' style='width:100%;' type='button'><i class='icon-plus icon-white'></i></button></a></div>\";\r\n    */\r\n    var aInfowindow = $(someHtml)[0];\r\n    aInfowindow.id = 'myinfowindowid';\r\n    var aInfowindowcontent = aInfowindow.getElementsByClassName(\"infowindowbody\")[0];\r\n    aInfowindowcontent.style.maxHeight = document.height / 2 - 10 + \"px\";\r\n    var aTable = aInfowindowcontent.getElementsByTagName(\"table\")[0];\r\n    aTable.className = \"table table-striped\";\r\n    \r\n    var toolbar = $(\"<div class='infowindowtoolbar'><button class='btn btn-mini' type='button' title='Saber mais...'><i class='icon-plus'></i></button></div>\")[0];\r\n    aInfowindow.appendChild(toolbar);\r\n\r\n    return aInfowindow;\r\n};\r\n\r\nns_gmaps.removeMapsEngineLayer = function (id)\r\n{\r\n    //Remove from map\r\n    xCore.globalobjects.overlays.gme[id].setMap(null);\r\n    \r\n    //Set tree element off\r\n    ns_interface.setLayerOnOff(id, false);\r\n    \r\n    //remove from global object\r\n    if(xCore.globalobjects.overlays.gme[id]){        \r\n        delete xCore.globalobjects.overlays.gme[id];\r\n    }    \r\n};\r\n\r\nns_gmaps.goToNewBounds = function (bbox)\r\n{\r\n    if(bbox)\r\n   {\r\n        var xy1 = new google.maps.LatLng(bbox[1] , bbox[0]);\r\n        var xy2 = new google.maps.LatLng(bbox[3] , bbox[2]);                    \r\n        ns_gmaps.map.fitBounds(new google.maps.LatLngBounds(xy1,xy2));    \r\n   }\r\n};\r\n\r\nns_gmaps.addMarker = function(dataId , geomType, coords, tooltip, infoWindow)\r\n{       \r\n    if(coords)\r\n    {   \r\n        xCore.globalobjects.overlays[geomType][dataId] = new google.maps.Marker({\r\n            id:dataId,\r\n            position: new google.maps.LatLng(coords.lat(),coords.lng()),\r\n            map: ns_gmaps.map,\r\n            title:tooltip,\r\n            draggable:false\r\n        });\r\n        \r\n        google.maps.event.addListener(xCore.globalobjects.overlays[geomType][dataId], 'click', function() {\r\n            xCore.globalobjects.overlays.Infowindows[dataId].open(ns_gmaps.map , xCore.globalobjects.overlays[geomType][dataId]);\r\n        });\r\n                \r\n        ns_gmaps.map.setCenter(xCore.globalobjects.overlays[geomType][dataId].getPosition());\r\n    }\r\n};\r\n\r\nns_gmaps.addSimpleMarker = function(coords, tooltip, overlay)\r\n{       \r\n    if(coords)\r\n    {   \r\n        //Only one marker per quicksearch\r\n        if (xCore.globalobjects.overlays[overlay]) {\r\n            xCore.globalobjects.overlays[overlay].setMap(null);\r\n        }\r\n        \r\n        xCore.globalobjects.overlays[overlay] = new google.maps.Marker({\r\n            position : new google.maps.LatLng(coords[1] , coords[0]),\r\n            map: ns_gmaps.map,\r\n            title:tooltip,\r\n            draggable:false\r\n        });\r\n        \r\n        ns_gmaps.map.setCenter(xCore.globalobjects.overlays[overlay].getPosition());\r\n        ns_gmaps.map.setZoom(15);\r\n    }\r\n};\r\n\r\nns_gmaps.changePin = function(aColor)\r\n{\r\n    var pinColor = aColor;\r\n    var pinUrl = \"http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|\";\r\n    var pinImage = new google.maps.MarkerImage(pinUrl + pinColor,\r\n            new google.maps.Size(21, 34),\r\n            new google.maps.Point(0,0),\r\n            new google.maps.Point(10, 34));\r\n            \r\n    return pinImage;            \r\n};\r\n\r\nns_gmaps.drawPolyline = function(dataId , geomType, coords, tooltip, infoWindow)\r\n{    \r\n    if(coords)\r\n    {\r\n        var polylines = [];\r\n        var bounds = new google.maps.LatLngBounds();\r\n        for (var i = 0; i < coords.getArray().length; i++) {\r\n            var polyline = [];\r\n            var nextCoords = coords.getArray()[i].getArray();\r\n            for (var j = 0; j < nextCoords.length; j++) {\r\n                var newCoord = new google.maps.LatLng(nextCoords[j].lat(),nextCoords[j].lng()); \r\n                polyline.push(newCoord);\r\n                bounds.extend(newCoord);\r\n            }\r\n            polylines.push(polyline);                \r\n        }\r\n        \r\n        for (var i = 0; i < polylines.length; i++) {\r\n            xCore.globalobjects.overlays[geomType][dataId] = new google.maps.Polyline({\r\n                path: polylines[i],\r\n                strokeColor: \"#FF0000\",\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 2,\r\n                title:tooltip,\r\n                editable:true,\r\n                draggable: true,\r\n                geodesic: true,\r\n                map: ns_gmaps.map\r\n            });\r\n        \r\n            google.maps.event.addListener(xCore.globalobjects.overlays[geomType][dataId], 'click', function() {\r\n                if(google.maps.geometry.poly.containsLocation(event.latLng, xCore.globalobjects.overlays[geomType][dataId]) === true) \r\n                {\r\n                    xCore.globalobjects.overlays.Infowindows[dataId].setPosition(event.latLng);\r\n                    xCore.globalobjects.overlays.Infowindows[dataId].open(ns_gmaps.map);                    \r\n                }        \r\n            });    \r\n        }\r\n        \r\n        ns_gmaps.map.fitBounds(bounds);        \r\n    }        \r\n};\r\n\r\nns_gmaps.drawPolygon = function(dataId , geomType, coords, tooltip, infoWindow)\r\n{\r\n    if(coords)\r\n    {\r\n        var polygons = [];\r\n        var bounds = new google.maps.LatLngBounds();        \r\n        for (var i = 0; i < coords.getArray().length; i++) {\r\n            var polygon = [];\r\n            var nextCoords = coords.getArray()[i].getArray(); \r\n            for (var j = 0; j < nextCoords.length; j++) {\r\n                var newCoord = new google.maps.LatLng(nextCoords[j].lat(),nextCoords[j].lng()); \r\n                polygon.push(newCoord);\r\n                bounds.extend(newCoord);\r\n            }\r\n            polygons.push(polygon);                \r\n        }\r\n        \r\n        for (var i = 0; i < polygons.length; i++) {\r\n            xCore.globalobjects.overlays[geomType][dataId] = new google.maps.Polygon({\r\n                paths: polygons[i],\r\n                strokeColor: \"#FF0000\",\r\n                strokeOpacity: 0.8,\r\n                strokeWeight: 2,\r\n                fillColor: \"#FF0000\",\r\n                fillOpacity: 0.35,\r\n                title:tooltip,\r\n                editable:true,\r\n                draggable: true,\r\n                geodesic: true,\r\n                map: ns_gmaps.map\r\n            });\r\n          \r\n            google.maps.event.addListener(xCore.globalobjects.overlays[geomType][dataId], 'click', function(event) {                            \r\n                if(google.maps.geometry.poly.containsLocation(event.latLng, xCore.globalobjects.overlays[geomType][dataId]) === true) \r\n                {\r\n                    xCore.globalobjects.overlays.Infowindows[dataId].setPosition(event.latLng);\r\n                    xCore.globalobjects.overlays.Infowindows[dataId].open(ns_gmaps.map);                    \r\n                }             \r\n            });\r\n        }                \r\n        ns_gmaps.map.fitBounds(bounds);\r\n    }\r\n};\r\n\r\nns_gmaps.infoWindow = function(dataId, data, schema, geometryType){\r\n\r\n    var divWrapper = document.createElement(\"div\");\r\n    divWrapper.id= \"editorwrapper\";\r\n    divWrapper.appendChild(ns_editor.buildForm(dataId, data , schema, geometryType));             \r\n    xCore.globalobjects.overlays.Infowindows[dataId] = new google.maps.InfoWindow({\r\n        content: divWrapper,\r\n        shadow:null\r\n    });   \r\n};\r\n\r\nns_gmaps.getBoundsForPoly = function (poly) \r\n{\r\n  var bounds = new google.maps.LatLngBounds;  \r\n  poly.getPath().forEach(function(latLng) {\r\n    bounds.extend(latLng);\r\n  });\r\n  return bounds;\r\n};\r\n\r\nns_gmaps.clearOverlay = function(anOverlay)\r\n{   \r\n   var overlay = xCore.globalobjects.overlays[anOverlay];\r\n   if(overlay){\r\n       overlay.setMap(null);\r\n       var inputField = document.getElementById(anOverlay);\r\n       if(inputField){\r\n           inputField.value = '';\r\n       }\r\n   }\r\n};\r\n\r\nns_gmaps.drawGeoJSON = function(geoJson){\r\n    \r\n    var options = {\r\n        strokeColor: \"#FFFF00\",\r\n        strokeWeight: 7,\r\n        strokeOpacity: 0.75\r\n    };\r\n\r\n    var googleVector = new GeoJSON(geoJson.geometry, options);\r\n    googleVector.setMap(ns_gmaps.map);    \r\n};\r\n\r\nns_gmaps.setupPlaceSearch = function(){\r\n  \r\n  var input = (document.getElementById('placesearch'));\r\n  var autocomplete = new google.maps.places.Autocomplete(input);\r\n  autocomplete.bindTo('bounds', ns_gmaps.map);\r\n  \r\n  var infowindow = new google.maps.InfoWindow();\r\n  xCore.globalobjects.overlays.placesearch = new google.maps.Marker({\r\n    map: ns_gmaps.map\r\n  });\r\n  \r\n  google.maps.event.addListener(autocomplete, 'place_changed', function() {\r\n        infowindow.close();\r\n        xCore.globalobjects.overlays.placesearch.setVisible(false);\r\n        input.className = '';\r\n        var place = autocomplete.getPlace();\r\n        if (!place.geometry) {\r\n          // Inform the user that the place was not found and return.\r\n          input.className = 'notfound';\r\n          return;\r\n        }\r\n        \r\n        // If the place has a geometry, then present it on a map.\r\n        if (place.geometry.viewport) {\r\n          ns_gmaps.map.fitBounds(place.geometry.viewport);\r\n        } else {\r\n          ns_gmaps.map.setCenter(place.geometry.location);\r\n          ns_gmaps.map.setZoom(17);  // Why 17? Because it looks good.\r\n        }\r\n\r\n        xCore.globalobjects.overlays.placesearch.setPosition(place.geometry.location);\r\n        xCore.globalobjects.overlays.placesearch.setVisible(true);\r\n        \r\n        var address = '';\r\n        if (place.address_components) {\r\n          address = [\r\n            (place.address_components[0] && place.address_components[0].short_name || ''),\r\n            (place.address_components[1] && place.address_components[1].short_name || ''),\r\n            (place.address_components[2] && place.address_components[2].short_name || '')\r\n          ].join(' ');\r\n        }\r\n        \r\n        infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);\r\n        infowindow.open(ns_gmaps.map, xCore.globalobjects.overlays.placesearch);\r\n  });\r\n};\r\n\r\nns_gmaps.goHome = function(){\r\n    ns_gmaps.map.setCenter(new google.maps.LatLng(ns_gmaps.settings.centerlng,ns_gmaps.settings.centerlat));\r\n    ns_gmaps.map.setZoom(ns_gmaps.settings.zoom);\r\n};\r\n\r\n}());\r\n"]],"start1":0,"start2":0,"length1":0,"length2":15496}]],"length":15496}
